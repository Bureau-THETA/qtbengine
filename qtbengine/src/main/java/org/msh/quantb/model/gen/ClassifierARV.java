//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.msh.quantb.model.gen;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ClassifierARV.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>{@code
 * <simpleType name="ClassifierARV">
 *   <restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     <enumeration value="NRTI"/>
 *     <enumeration value="NNRTI"/>
 *     <enumeration value="Protease_Inhibitors"/>
 *     <enumeration value="Fusion_Inhibitors"/>
 *     <enumeration value="CCR5_Antagonists"/>
 *     <enumeration value="Integrase_Inhibitors"/>
 *     <enumeration value="Post_Attachment_Inhibitors"/>
 *     <enumeration value="Pharmacokinetic_Enhancers"/>
 *     <enumeration value="UNKNOWN"/>
 *   </restriction>
 * </simpleType>
 * }</pre>
 * 
 */
@XmlType(name = "ClassifierARV")
@XmlEnum
public enum ClassifierARV {

    NRTI("NRTI"),
    NNRTI("NNRTI"),
    @XmlEnumValue("Protease_Inhibitors")
    PROTEASE_INHIBITORS("Protease_Inhibitors"),
    @XmlEnumValue("Fusion_Inhibitors")
    FUSION_INHIBITORS("Fusion_Inhibitors"),
    @XmlEnumValue("CCR5_Antagonists")
    CCR_5_ANTAGONISTS("CCR5_Antagonists"),
    @XmlEnumValue("Integrase_Inhibitors")
    INTEGRASE_INHIBITORS("Integrase_Inhibitors"),
    @XmlEnumValue("Post_Attachment_Inhibitors")
    POST_ATTACHMENT_INHIBITORS("Post_Attachment_Inhibitors"),
    @XmlEnumValue("Pharmacokinetic_Enhancers")
    PHARMACOKINETIC_ENHANCERS("Pharmacokinetic_Enhancers"),
    UNKNOWN("UNKNOWN");
    private final String value;

    ClassifierARV(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ClassifierARV fromValue(String v) {
        for (ClassifierARV c: ClassifierARV.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
